$retina-postfix: '@2x';

$defaultGridOptions: (
    type: float,
    col: null,
    size: 12,
    indent: 48px
);

@function vw($px, $root: 1920) {
    @return $px / $root * 100 + 0vw;
}

@function vh($px, $root: 1080) {
    @return $px / $root * 100 + 0vh;
}

@function rem($px, $root: 16) {
    @return $px / $root + 0rem;
}

@function e($px, $unt: $units) {
    @if ($unt == 'rem') {
        @return rem($px);
    } @else if ($unt == 'vw') {
        @return vw($px);
    } @else if ($unt == 'vh') {
        @return vh($px);
    } @else {
        @return $px + 0px;
    }
}

@function nameX2($name, $postfix: $retina-postfix) {
    $index: str-index($name, '.');

    $img-name: str-slice($name, 0, $index - 1);
    $img-ext: str-slice($name, $index);

    @return $img-name + $postfix + $img-ext;
}

@mixin atRoot($selectors...) {
    $selector-string: '';
    $counter: 0;
    @each $selector in $selectors {
        @if $counter == 0 {
            $selector-string: #{$selector}#{&};
        } @else {
            $selector-string: #{$selector-string}, #{$selector}#{&};
        }
        $counter: 1;
    }

    @at-root {
        #{$selector-string} {
            @content
        }
    }
}

@mixin X2() {
    @media (min--moz-device-pixel-ratio: 1.3),
        (-o-min-device-pixel-ratio: 2.6/2),
        (-webkit-min-device-pixel-ratio: 1.3),
        (min-device-pixel-ratio: 1.3),
        (min-resolution: 1.3dppx) {
            @content;
    }
}

@mixin clearfix() {
    &::after {
        content: '';
        display: table;
        clear: both;
    }
}

@mixin paramBg($img-name, $options...) {
    @if index($options, width) {
        width: image-width($img-name);
    } @else if index($options, height) {
        height: image-height($img-name);
    } @else if index($options, size) {
        width: image-width($img-name);
        height: image-height($img-name);
    }

    @if index($options, repeat) {
        background-repeat: repeat;
    } @else if index($options, repeat-x) {
        background-repeat: repeat-x;
    } @else if index($options, repeat-y) {
        background-repeat: repeat-y;
    } @else {
        background-repeat: no-repeat;
    }

    @if index($options, bg-size) {
        background-size: image-width($img-name) image-height($img-name);
    } @else if $units != 'px' {
        background-size: image-width($img-name) image-height($img-name);
    }
}

@mixin bg($img-name, $options...) {
    @include paramBg($img-name, $options...)
    background-image: image-url($img-name);
}

@mixin bgX2($img-name, $options...) {
    @include bg($img-name, $options...);

    @include X2() {
        background-image: image-url(nameX2($img-name));
    }
}

@mixin resizeBg($img-name, $percent, $options...) {
    $width: image-width($img_name) * $percent / 100;
    $height: image-height($img_name) * $percent / 100;

    @if $units == 'px' {
        @if type-of($width) == number {
            $width: round($width);
        }

        @if type-of($height) == number {
            $height: round($height);
        }
    }

    @if index($options, width) {
        width: $width;
    } @else if index($options, height) {
        height: $height;
    } @else if index($options, size) {
        width: $width;
        height: $height;
    }

    background-size: $width $height;
}

@mixin grid($options: ()) {
    $configuration: map-merge($defaultGridOptions, $options);
    $type: map-get($configuration, type);
    $indent: map-get($configuration, indent);
    $col: map-get($configuration, col);
    $size: map-get($configuration, size);

    @if ($type == inline) {

    } @else if ($type == float) {
        overflow: hidden;
    } @else if ($type == flex) {

    } @else if ($type == table) {

    }
}

@mixin gridRow($options: ()) {
    $configuration: map-merge($defaultGridOptions, $options);
    $type: map-get($configuration, type);
    $indent: map-get($configuration, indent);
    $col: map-get($configuration, col);
    $size: map-get($configuration, size);

    @if ($type == inline) {

    } @else if ($type == float) {
        margin-left: -$indent;
        margin-top: -$indent;
        width: calc(100% + #{$indent});
        @include clearfix();
    } @else if ($type == flex) {

    } @else if ($type == table) {
        display: table;
        table-layout: fixed;
        width: calc(100% + #{$indent});
        margin-left: -$indent;
    }
}

@mixin gridCol($options: ()) {
    $configuration: map-merge($defaultGridOptions, $options);
    $type: map-get($configuration, type);
    $indent: map-get($configuration, indent);
    $col: map-get($configuration, col);
    $size: map-get($configuration, size);

    @if ($type == inline) {

    } @else if ($type == float) {
        float: left;
        padding-left: $indent;
        padding-top: $indent;
        @if $col != null {
            width: 100 / $size * $col + 0%;
        };
    } @else if ($type == flex) {

    } @else if ($type == table) {
        display: table-cell;
        padding-left: $indent;
        @if $col != null {
            width: 100 / $size * $col + 0%;
        };
    }
}

@mixin gridColWidth($options: ()) {
    $configuration: map-merge($defaultGridOptions, $options);
    $type: map-get($configuration, type);
    $indent: map-get($configuration, indent);
    $col: map-get($configuration, col);
    $size: map-get($configuration, size);

    @if ($type == inline) {

    } @else if ($type == float) {
        width: 100 / $size * $col + 0%;
    } @else if ($type == flex) {

    }
}
